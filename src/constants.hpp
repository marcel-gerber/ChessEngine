#include <cstdint>

// all pre-calculated lookup tables by Disservin
// https://github.com/Disservin/chess-library/blob/master/src/attacks_fwd.hpp
class Constants {
public:
    // pre-calculated lookup table for pawn attacks
    static constexpr uint64_t PawnAttacks[2][64] = {
            // white pawn attacks
            { 0x200, 0x500, 0xa00, 0x1400,
                    0x2800, 0x5000, 0xa000, 0x4000,
                    0x20000, 0x50000, 0xa0000, 0x140000,
                    0x280000, 0x500000, 0xa00000, 0x400000,
                    0x2000000, 0x5000000, 0xa000000, 0x14000000,
                    0x28000000, 0x50000000, 0xa0000000, 0x40000000,
                    0x200000000, 0x500000000, 0xa00000000, 0x1400000000,
                    0x2800000000, 0x5000000000, 0xa000000000, 0x4000000000,
                    0x20000000000, 0x50000000000, 0xa0000000000, 0x140000000000,
                    0x280000000000, 0x500000000000, 0xa00000000000, 0x400000000000,
                    0x2000000000000, 0x5000000000000, 0xa000000000000, 0x14000000000000,
                    0x28000000000000, 0x50000000000000, 0xa0000000000000, 0x40000000000000,
                    0x200000000000000, 0x500000000000000, 0xa00000000000000, 0x1400000000000000,
                    0x2800000000000000, 0x5000000000000000, 0xa000000000000000, 0x4000000000000000,
                    0x0, 0x0, 0x0, 0x0,
                    0x0, 0x0, 0x0, 0x0
            },

            // black pawn attacks
            { 0x0, 0x0, 0x0, 0x0,
                    0x0, 0x0, 0x0, 0x0,
                    0x2, 0x5, 0xa, 0x14,
                    0x28, 0x50, 0xa0, 0x40,
                    0x200, 0x500, 0xa00, 0x1400,
                    0x2800, 0x5000, 0xa000, 0x4000,
                    0x20000, 0x50000, 0xa0000, 0x140000,
                    0x280000, 0x500000, 0xa00000, 0x400000,
                    0x2000000, 0x5000000, 0xa000000, 0x14000000,
                    0x28000000, 0x50000000, 0xa0000000, 0x40000000,
                    0x200000000, 0x500000000, 0xa00000000, 0x1400000000,
                    0x2800000000, 0x5000000000, 0xa000000000, 0x4000000000,
                    0x20000000000, 0x50000000000, 0xa0000000000, 0x140000000000,
                    0x280000000000, 0x500000000000, 0xa00000000000, 0x400000000000,
                    0x2000000000000, 0x5000000000000, 0xa000000000000, 0x14000000000000,
                    0x28000000000000, 0x50000000000000, 0xa0000000000000, 0x40000000000000
            }
    };

    // pre-calculated lookup table for knight attacks
    static constexpr uint64_t KnightAttacks[64] = {
            0x0000000000020400, 0x0000000000050800, 0x00000000000A1100, 0x0000000000142200, 0x0000000000284400,
            0x0000000000508800, 0x0000000000A01000, 0x0000000000402000, 0x0000000002040004, 0x0000000005080008,
            0x000000000A110011, 0x0000000014220022, 0x0000000028440044, 0x0000000050880088, 0x00000000A0100010,
            0x0000000040200020, 0x0000000204000402, 0x0000000508000805, 0x0000000A1100110A, 0x0000001422002214,
            0x0000002844004428, 0x0000005088008850, 0x000000A0100010A0, 0x0000004020002040, 0x0000020400040200,
            0x0000050800080500, 0x00000A1100110A00, 0x0000142200221400, 0x0000284400442800, 0x0000508800885000,
            0x0000A0100010A000, 0x0000402000204000, 0x0002040004020000, 0x0005080008050000, 0x000A1100110A0000,
            0x0014220022140000, 0x0028440044280000, 0x0050880088500000, 0x00A0100010A00000, 0x0040200020400000,
            0x0204000402000000, 0x0508000805000000, 0x0A1100110A000000, 0x1422002214000000, 0x2844004428000000,
            0x5088008850000000, 0xA0100010A0000000, 0x4020002040000000, 0x0400040200000000, 0x0800080500000000,
            0x1100110A00000000, 0x2200221400000000, 0x4400442800000000, 0x8800885000000000, 0x100010A000000000,
            0x2000204000000000, 0x0004020000000000, 0x0008050000000000, 0x00110A0000000000, 0x0022140000000000,
            0x0044280000000000, 0x0088500000000000, 0x0010A00000000000, 0x0020400000000000
    };

    // pre-calculated lookup table for king attacks
    static constexpr uint64_t KingAttacks[64] = {
            0x0000000000000302, 0x0000000000000705, 0x0000000000000E0A, 0x0000000000001C14, 0x0000000000003828,
            0x0000000000007050, 0x000000000000E0A0, 0x000000000000C040, 0x0000000000030203, 0x0000000000070507,
            0x00000000000E0A0E, 0x00000000001C141C, 0x0000000000382838, 0x0000000000705070, 0x0000000000E0A0E0,
            0x0000000000C040C0, 0x0000000003020300, 0x0000000007050700, 0x000000000E0A0E00, 0x000000001C141C00,
            0x0000000038283800, 0x0000000070507000, 0x00000000E0A0E000, 0x00000000C040C000, 0x0000000302030000,
            0x0000000705070000, 0x0000000E0A0E0000, 0x0000001C141C0000, 0x0000003828380000, 0x0000007050700000,
            0x000000E0A0E00000, 0x000000C040C00000, 0x0000030203000000, 0x0000070507000000, 0x00000E0A0E000000,
            0x00001C141C000000, 0x0000382838000000, 0x0000705070000000, 0x0000E0A0E0000000, 0x0000C040C0000000,
            0x0003020300000000, 0x0007050700000000, 0x000E0A0E00000000, 0x001C141C00000000, 0x0038283800000000,
            0x0070507000000000, 0x00E0A0E000000000, 0x00C040C000000000, 0x0302030000000000, 0x0705070000000000,
            0x0E0A0E0000000000, 0x1C141C0000000000, 0x3828380000000000, 0x7050700000000000, 0xE0A0E00000000000,
            0xC040C00000000000, 0x0203000000000000, 0x0507000000000000, 0x0A0E000000000000, 0x141C000000000000,
            0x2838000000000000, 0x5070000000000000, 0xA0E0000000000000, 0x40C0000000000000
    };

    // Magic numbers for Rooks
    static constexpr uint64_t RookMagics[64] = {
            0x0080004000976080ULL, 0x1040400010002000ULL, 0x4880200210000980ULL, 0x5280080010000482ULL,
            0x0200040200081020ULL, 0x2100080100020400ULL, 0x4280008001000200ULL, 0x01000a4425820300ULL,
            0x0029002100800040ULL, 0x4503400040201004ULL, 0x0209002001004018ULL, 0x1131000a10002100ULL,
            0x0009000800120500ULL, 0x010e001804820010ULL, 0x0029000402000100ULL, 0x2002000d01c40292ULL,
            0x0080084000200c40ULL, 0x0010004040002002ULL, 0x0201030020004014ULL, 0x080012000a420020ULL,
            0x0129010008001204ULL, 0x6109010008040002ULL, 0x0950010100020004ULL, 0x00803a0000c50284ULL,
            0x0080004100210080ULL, 0x0000200240100140ULL, 0x0020004040100800ULL, 0x4018090300201000ULL,
            0x4802010a00102004ULL, 0x2001000900040002ULL, 0x04a02104001002a8ULL, 0x2188108200204401ULL,
            0x0040400020800080ULL, 0x0880402000401004ULL, 0x0010040800202000ULL, 0x0604410a02001020ULL,
            0x200200206a001410ULL, 0x0086000400810080ULL, 0x428200040600080bULL, 0x2001000041000082ULL,
            0x0080002000484000ULL, 0x0210002002c24000ULL, 0x401a200100410014ULL, 0x0005021000a30009ULL,
            0x0218000509010010ULL, 0x4000400410080120ULL, 0x0000020801040010ULL, 0x0029040040820011ULL,
            0x4080400024800280ULL, 0x0500200040100440ULL, 0x2880142001004100ULL, 0x412020400a001200ULL,
            0x018c028004080080ULL, 0x0884001020080401ULL, 0x0000210810420400ULL, 0x0801048745040200ULL,
            0x4401002040120082ULL, 0x0000408200210012ULL, 0x0000110008200441ULL, 0x2010002004100901ULL,
            0x0801000800040211ULL, 0x480d000400820801ULL, 0x0820104201280084ULL, 0x1001040311802142ULL,
    };

    // Magic numbers for Bishops
    static constexpr uint64_t BishopMagics[64] = {
            0x001024b002420160ULL, 0x1008080140420021ULL, 0x2012080041080024ULL, 0x0c282601408c0802ULL,
            0x2004042000000002ULL, 0x0012021004022080ULL, 0x0880414820100000ULL, 0x4501002211044000ULL,
            0x0020402222121600ULL, 0x1081088a28022020ULL, 0x01004c2810851064ULL, 0x2040080841004918ULL,
            0x1448020210201017ULL, 0x4808110108400025ULL, 0x0010504404054004ULL, 0x0800010422092400ULL,
            0x0040000870450250ULL, 0x0402040408080518ULL, 0x001000980a404108ULL, 0x0001020804110080ULL,
            0x0008200c02082005ULL, 0x00040802009a0800ULL, 0x0001000201012100ULL, 0x0111080200820180ULL,
            0x0904122104101024ULL, 0x4008200405244084ULL, 0x0044040002182400ULL, 0x4804080004021002ULL,
            0x6401004024004040ULL, 0x0404010001300a20ULL, 0x0428020200a20100ULL, 0x0300460100420200ULL,
            0x000404200c062000ULL, 0x0022101400510141ULL, 0x0104044400180031ULL, 0x2040040400280211ULL,
            0x0008020400401010ULL, 0x20100110401a0040ULL, 0x00100101005a2080ULL, 0x001a008300042411ULL,
            0x120a025004504000ULL, 0x4001084242101000ULL, 0x0a020202010a4200ULL, 0x4000002018000100ULL,
            0x0000080104000044ULL, 0x1004009806004043ULL, 0x100401080a000112ULL, 0x1041012101000608ULL,
            0x040400c250100140ULL, 0x080a10460a100002ULL, 0x2210030401240002ULL, 0x06040aa108481b20ULL,
            0x4009004050410002ULL, 0x08106003420200e0ULL, 0x1410500a08206000ULL, 0x0092548802004000ULL,
            0x0001040041241028ULL, 0x0000120042025011ULL, 0x0008060104054400ULL, 0x20004404020a0a01ULL,
            0x0040008010020214ULL, 0x04000050209802c1ULL, 0x0000208244210400ULL, 0x0010140848044010ULL,
    };
};